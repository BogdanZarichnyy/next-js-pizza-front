import axios from "axios";
import crypto from "crypto";
import { FondyType } from "../../@types/fondy";

interface Props {
  orderId: number;
  description: string;
  amount: number;
}

export async function createPayment(details: Props) {
  // const merchantId = process.env.NEXT_PUBLIC_FONDY_MERCHANT_ID; // —Å–≤—ñ–π MERCHANT_ID
  // const secretKey = process.env.NEXT_PUBLIC_FONDY_SECRET_KEY; // —Å–≤—ñ–π SECRET_KEY, —è–∫–æ–≥–æ —â–µ –Ω–µ–º–∞—î

  const merchantId = process.env.NEXT_PUBLIC_FONDY_TEST_MERCHANT_ID as string; // —Ç–µ—Å—Ç–æ–≤–∏–π 1396424 –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –∑ –∫–ª—é—á–µ–º "test", —ñ–Ω–∞–∫—à–µ –±—É–¥–µ –ø–æ–º–∏–ª–∫–∞
  const secretKey = process.env.NEXT_PUBLIC_FONDY_TEST_SECRET_KEY as string; // —Ç–µ—Å—Ç–æ–≤–∏–π "test" –¥–ª—è sandbox

  const responseUrl = process.env.NEXT_PUBLIC_FONDY_SERVER_REDIRECT_URL as string; // —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü—ñ—ó –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏
  const responseServerUrl = process.env.NEXT_PUBLIC_FONDY_SERVER_CALLBACK_URL as string; // —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü—ñ—ó –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞

  // —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π order_id, —ñ–Ω–∞–∫—à–µ —Å–µ—Ä–≤—ñ—Å –ø–æ–≤–µ—Ä–Ω–µ –ø–æ–º–∏–ª–∫—É, –π–æ–º—É –ø–æ—Ç—Ä—ñ–±–Ω—ñ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ order_id
  const uniqueOrderId = `${details.orderId}_${Date.now()}`;

  const payload: FondyType = {
    // order_id: String(details.orderId), // ‚ö† —Ä—è–¥–æ–∫
    order_id: uniqueOrderId,
    merchant_id: merchantId,
    order_desc: details.description,
    currency: "UAH", // –≤ –≥—Ä–∏–≤–Ω—è—Ö
    amount: Math.round(details.amount * 100), // ‚ö† integer - 100.00 –≥—Ä–Ω (Fondy –ø—Ä–∞—Ü—é—î –≤ –∫–æ–ø—ñ–π–∫–∞—Ö)
    response_url: responseUrl, // –∫—É–¥–∏ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏
    server_callback_url: responseServerUrl, // –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ POST –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ Fondy –ø–ª–∞—Ç–µ–∂—É –¥–ª—è –±–µ–∫–µ–Ω–¥—É
  };

  // üîë –§–æ—Ä–º—É—î–º–æ –ø—ñ–¥–ø–∏—Å SHA1 - –ø–æ—Ç—Ä—ñ–±–µ–Ω –¥–ª—è —É–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó –ø–ª–∞—Ç–µ–∂—ñ–≤ —Å–µ—Ä–≤—ñ—Å—É Fondy, —ñ–Ω–∞–∫—à–µ –ø–ª–∞—Ç—ñ–∂ –Ω–µ –ø—Ä–æ–π–¥–µ
  const signatureString = [
    secretKey,
    payload.amount,
    payload.currency,
    payload.merchant_id,
    payload.order_desc,
    payload.order_id,
    payload.response_url,
    payload.server_callback_url,
  ].join("|"); // üîë –§—ñ–∫—Å–æ–≤–∞–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –ø–æ–ª—ñ–≤ –¥–ª—è redirect flow

  // SHA1 –ø—ñ–¥–ø–∏—Å
  payload.signature = crypto
    .createHash("sha1")
    .update(signatureString, "utf8") // –∫–æ–¥—É–≤–∞–Ω–Ω—è "utf8" –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, –∞–ª–µ –º–æ–∂–Ω–∞ —ñ –ø–µ—Ä–µ—Å—Ç—Ä–∞—Ö—É–≤–∞—Ç–∏—Å—è
    .digest("hex");

  // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–ª–∞—Ç–µ–∂—É
  const { data } = await axios.post(
    "https://pay.fondy.eu/api/checkout/url/",
    { request: payload },
    { headers: { "Content-Type": "application/json" } }
  );

  console.log('fondy response', data);

  if (!data?.response?.checkout_url) {
    throw new Error("Fondy –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ checkout_url");
  }

  return data;
}