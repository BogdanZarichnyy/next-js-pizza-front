import axios from "axios";
import crypto from "crypto";
import { FondyType } from "../../@types/fondy";

interface Props {
  orderId: number;
  description: string;
  amount: number;
}

export async function createPayment(details: Props) {
  const merchantId = process.env.NEXT_PUBLIC_FONDY_MERCHANT_ID || "1397120"; // —Å–≤—ñ–π 1397120
  // const merchantId = "1396424"; // —Ç–µ—Å—Ç–æ–≤–∏–π 1396424
  const secretKey = process.env.NEXT_PUBLIC_FONDY_SECRET_KEY || "test"; // –æ–±–æ–≤'—è–∑–∫–æ–≤–æ "test" –¥–ª—è sandbox
  const responseUrl = process.env.NEXT_PUBLIC_FONDY_CALLBACK_URL || "http://localhost:3000/?paid";

  const payload: FondyType = {
    order_id: String(details.orderId), // ‚ö† —Ä—è–¥–æ–∫
    merchant_id: merchantId,
    // order_desc: details.description.trim(), // ‚ö† –±–µ–∑ –∑–∞–π–≤–∏—Ö –ø—Ä–æ–±—ñ–ª—ñ–≤
    order_desc: details.description,
    currency: "UAH", // –≤ –≥—Ä–∏–≤–Ω—è—Ö
    amount: Math.round(details.amount * 100), // ‚ö† integer - 100.00 –≥—Ä–Ω (Fondy –ø—Ä–∞—Ü—é—î –≤ –∫–æ–ø—ñ–π–∫–∞—Ö)
    response_url: responseUrl, // –∫—É–¥–∏ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏
    // server_callback_url: "http://localhost:3000/api/fondy/callback", // –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø–ª–∞—Ç–µ–∂—É –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ, –≤ –¥–∞–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ —Ü–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
  };

  // üîë –§–æ—Ä–º—É—î–º–æ –ø—ñ–¥–ø–∏—Å SHA1 - –ø–æ—Ç—Ä—ñ–±–µ–Ω –¥–ª—è —É–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó –ø–ª–∞—Ç–µ–∂—ñ–≤ —Å–µ—Ä–≤—ñ—Å—É Fondy, —ñ–Ω–∞–∫—à–µ –ø–ª–∞—Ç—ñ–∂ –Ω–µ –ø—Ä–æ–π–¥–µ
  const signatureString = [
    secretKey,
    payload.amount,
    payload.currency,
    payload.merchant_id,
    payload.order_desc,
    payload.order_id,
    payload.response_url
  ].join("|"); // üîë –§—ñ–∫—Å–æ–≤–∞–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –ø–æ–ª—ñ–≤ –¥–ª—è redirect flow

  // SHA1 –ø—ñ–¥–ø–∏—Å
  payload.signature = crypto
    .createHash("sha1")
    .update(signatureString)
    .digest("hex");

  // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–ª–∞—Ç–µ–∂—É
  const { data } = await axios.post(
    "https://pay.fondy.eu/api/checkout/url/",
    { request: payload },
    { headers: { "Content-Type": "application/json" } }
  );

  console.log(data);

  if (!data?.response?.checkout_url) {
    throw new Error("Fondy –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ checkout_url");
  }

  return data;
}